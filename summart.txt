1. Simple Terminal Calculator

Purpose:
The simple terminal calculator allows users to perform basic arithmetic operations (addition, subtraction, multiplication, and division) directly from the terminal.

Key Features:
Basic Operations: Users can choose from four operations: addition, subtraction, multiplication, and division.
User Input: The program prompts the user to enter two numbers and the desired operation.
Error Handling: It checks for invalid inputs (non-numeric values) and handles division by zero gracefully.
Looping: The program runs in a loop, allowing users to perform multiple calculations until they choose to exit.

Code Breakdown:
Functions (add, subtract, multiply, divide) perform the respective arithmetic operations.
The calculator function manages user interaction, including input validation and displaying results.
The program runs in a loop until the user decides to quit by entering 'q'.


2. Advanced File Manager
Purpose:
The advanced file manager script organizes files in a specified directory by sorting them into subdirectories based on their file types (extensions).

Key Features:
Directory Creation: Automatically creates subdirectories for each file type if they do not already exist.
File Movement: Moves files into their respective folders based on their extensions (e.g., .jpg, .txt).
User Input: The user specifies the directory to be organized.
Error Handling: Checks if the specified directory exists and handles any exceptions that may arise during file operations.

Code Breakdown:
The create_directory function checks for the existence of a directory and creates it if necessary.
The sort_files function iterates through the files in the specified directory, determines their extensions, and moves them to the appropriate subdirectory.
The main function handles user input and initiates the sorting process.

3. Text Analyzer

Purpose:
The text analyzer script reads a text file and provides various statistics about its content, such as word count, sentence count, character count, and word frequency.

Key Features:
Word Count: Counts the total number of words in the text.
Sentence Count: Counts the total number of sentences based on punctuation marks.
Character Count: Counts the total number of characters, including spaces.
Word Frequency: Displays the frequency of the top 10 most common words in the text.
User Input: The user specifies the path of the text file to be analyzed.


Code Breakdown:
The analyze_text function reads the content of the specified file, cleans the text by removing punctuation, and converts it to lowercase for uniformity.
It calculates various statistics using string methods and the Counter class from the collections module.
The main function prompts the user for the file path and calls the analysis function


Summary

Simple Terminal Calculator: A straightforward program for performing basic arithmetic operations with user-friendly input and error handling.

Advanced File Manager: A utility for organizing files in a directory based on their types, enhancing file management and organization.

Text Analyzer: A tool for analyzing text files, providing insights into word and sentence counts, character counts, and word frequency.

Each of these scripts demonstrates fundamental programming concepts such as functions, loops, conditionals, user input,
and error handling, making them great examples for learning Python.
You can further enhance these scripts by adding more features or improving their functionality based on your needs
